    public boolean endOfTheGame() {
        boolean result = true;
        if (checker != null) {
            checker.calculateWhereCanItGo();
        }
        if (checker.side.equals("black")) { //For Black
            for (int i = 0; i < 8; ++i) { //Sahin Gidebilecegi Yer Var mi?
                for (int k = 0; k < 8; ++k) {
                    if (tableAsSquare[i][k].onThis != null && tableAsSquare[i][k].onThis.type.equals("king") && tableAsSquare[i][k].onThis.side.equals("white")) {
                        tableAsSquare[i][k].onThis.calculateWhereCanItGo();
                        if(tableAsSquare[i][k].onThis.availablePos.contains(tableAsSquare[checker.x][checker.y])) //Sah Checkerý Yiyebilir mi ?
                              result= false;
                        else
                        for (int j = 0; j < tableAsSquare[i][k].onThis.availablePos.size(); j++) {
                            if (checker.availablePos.contains(tableAsSquare[i][k].onThis.availablePos.get(j))) {
                                result=true;
                            }
                        }
                    }

                }
            }
        
                    for (int i = 0; i < 8; ++i) { //Sah Ceken Tasin Onune Gelebilecek Tas Var mi ?
                for (int k = 0; k < 8; ++k) {
                    if (tableAsSquare[i][k].onThis != null && !tableAsSquare[i][k].onThis.type.equals("king") && tableAsSquare[i][k].onThis.side.equals("white")) {
                        tableAsSquare[i][k].onThis.calculateWhereCanItGo();
                        if(tableAsSquare[i][k].onThis.availablePos.contains(tableAsSquare[checker.x][checker.y])) //Checkerý Baþka Bir Taþ Yiyebilir mi?
                        result =false;
                        else
                     for (int j = 0; j < checker.availablePos.size(); j++) 
                            if (tableAsSquare[i][k].onThis.availablePos.contains(checker.availablePos.get(j))) {
                                result = false;
                            }
                        }
                    }
                }
                    }
                                //For White
        else                         for (int i = 0; i < 8; ++i) { //Sahin Gidebilecegi Yer Var mi?
                for (int k = 0; k < 8; ++k) {
                    if (tableAsSquare[i][k].onThis != null && tableAsSquare[i][k].onThis.type.equals("king") && tableAsSquare[i][k].onThis.side.equals("black")) {
                        tableAsSquare[i][k].onThis.calculateWhereCanItGo();
                        if(tableAsSquare[i][k].onThis.availablePos.contains(tableAsSquare[checker.x][checker.y])) //Sah Checkerý Yiyebilir mi ?
                              result= false;
                        else
                        for (int j = 0; j < tableAsSquare[i][k].onThis.availablePos.size(); j++) {
                            if (checker.availablePos.contains(tableAsSquare[i][k].onThis.availablePos.get(j))) {
                                result=true;
                            }
                        }
                    }

                }
            }
        
                    for (int i = 0; i < 8; ++i) { //Sah Ceken Tasin Onune Gelebilecek Tas Var mi ?
                for (int k = 0; k < 8; ++k) {
                    if (tableAsSquare[i][k].onThis != null && !tableAsSquare[i][k].onThis.type.equals("king") && tableAsSquare[i][k].onThis.side.equals("black")) {
                        tableAsSquare[i][k].onThis.calculateWhereCanItGo();
                        if(tableAsSquare[i][k].onThis.availablePos.contains(tableAsSquare[checker.x][checker.y])) //Checkerý Baþka Bir Taþ Yiyebilir mi?
                        result =false;
                        else
                     for (int j = 0; j < checker.availablePos.size(); j++) 
                            if (tableAsSquare[i][k].onThis.availablePos.contains(checker.availablePos.get(j))) {
                                result = false;
                            }
                        }
                    }
                }
                    
        return result;
    }